<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.6.2">Jekyll</generator><link href="/feed.xml" rel="self" type="application/atom+xml" /><link href="/" rel="alternate" type="text/html" /><updated>2017-11-12T21:27:45-05:00</updated><id>/</id><title type="html">Life, space and AI</title><subtitle>“Think of how stupid the average person is, and realize half of them are stupider than that.” - George Carlin</subtitle><entry><title type="html">Reusability will solve AI!</title><link href="/nips-hrl/2017/11/12/welcome-to-jekyll.html" rel="alternate" type="text/html" title="Reusability will solve AI!" /><published>2017-11-12T00:00:00-05:00</published><updated>2017-11-12T00:00:00-05:00</updated><id>/nips-hrl/2017/11/12/welcome-to-jekyll</id><content type="html" xml:base="/nips-hrl/2017/11/12/welcome-to-jekyll.html">&lt;p&gt;I believe that the reusability will be key to more general AI. Currently, if I train a Neural Network to identify dogs and cats, and I throw a panda into the mix, I will have to retrain the whole system from scratch with brand new weights. Or if in RL, I train an agent to pick up and drop of one passenger and I throw another passenger into the domain, instead of learning to simply sequence the two pickups/dropoffs in an optimal way, it learns a brand new local minima for the two passenger
case. It is ridiculously inefficient to retrain basic skills every time you want to add a new capability to an agent. It will be like building a very expensive rocket booster and only using it for a single flight. Who does that?&lt;/p&gt;</content><author><name></name></author><summary type="html">I believe that the reusability will be key to more general AI. Currently, if I train a Neural Network to identify dogs and cats, and I throw a panda into the mix, I will have to retrain the whole system from scratch with brand new weights. Or if in RL, I train an agent to pick up and drop of one passenger and I throw another passenger into the domain, instead of learning to simply sequence the two pickups/dropoffs in an optimal way, it learns a brand new local minima for the two passenger case. It is ridiculously inefficient to retrain basic skills every time you want to add a new capability to an agent. It will be like building a very expensive rocket booster and only using it for a single flight. Who does that?</summary></entry></feed>